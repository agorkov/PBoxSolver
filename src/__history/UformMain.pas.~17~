unit UformMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TForm1 = class(TForm)
    btnLoadMap: TButton;
    img1: TImage;
    mmo1: TMemo;
    procedure btnLoadMapClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}
uses
  UGlobalTypes;

procedure TForm1.btnLoadMapClick(Sender: TObject);
var
  map: UGlobalTypes.TCMap;
  l: TCList;
  i: Integer;
begin
  map := TCMap.Create;
  map.LoadMapFromFile('map_test.txt');
  img1.Picture.Assign(map.DrawMap);
  l := TCList.Create;
  l.AddMap(0, map);
  l.Solve;
  for i := 1 to l.Count do
    if l.p[i].map.isEnd then
      Break;
  ShowMessage(IntToStr(i));
  while l.p[i].PrevInd <> 0 do
  begin
    mmo1.LineS.add(IntToStr(i));
    i := l.p[i].PrevInd;
  end;
  img1.Picture.Assign(l.p[1].map.DrawMap);
  for i := mmo1.Lines.Count - 1 to 0 do
   begin
     Sleep(1000);
     img1.Picture.Assign(l.p[strtoint(mmo1.Lines[i])].map.DrawMap);
   end;

end;

end.

